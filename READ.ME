ASSIGNMENT OVERVIEW
Hangman is popular word game.In this game,the player is given some number of blanks  representing the name of a movie or an actor and he/she has to guess the name using at most K number of changes.

Program Specifications
1)Output a brief description of the game of hangman and how to play 
2)Ask the user to enter the word or phrase that will be guessed(have a friend enter the phrase for you if you want to be suprised)
3)Output the appropriate the number of dashes and spaces to represent the phase (make sure it's clear how many letters are in each word and how many words there are)
4)Continuously read guesses of a letter from the user and fill in the corresponding blanks if the letter is in the word,
otherwise report that the user and fill in the corresponding blanks if the letter is in the word,otherwise report that the user has made an incorrect guess.
5)Each turn you will display the phrase as dashes but with any already guessed letters filled in,as well as which letters 
have been incorrectly guessed so far and how many guesses the user has remaining.
6)The program should allow the user to make a total of k=6 guesses.
7)The program MUST use at least 3 string methods or operators in a useful manner(several examples that I used are given in the notes below).
If you wish to use lists in your project that is fine,as long as you meet this requirement.

ASIGNMENT NOTES 
If the letter has already been guessed, output a message to the player and ask for input again.
If the guess entered is not an alphabetic letter, output a message and ask for input again.
If the letter is present in the word to be guessed, fill in the blanks appropriately with this
particular letter. If the complete name has been guessed, the game is over - player wins the
game. Output a message telling the player they have won and quit the game.
If the letter/digit is not present in the word to be guessed, give a message to the player indicating
that the guess is incorrect and remaining number of chances is one less. If remaining number of
chances is 0 (zero), the game is over - player loses the game. Output a message that they have
lost and what the correct word was. Quit the game.